<Page x:Class="wisecorp.Views.ViewManageProjects"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:wisecorp.Views"
      mc:Ignorable="d"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      Style="{StaticResource {x:Type Page}}"
      d:DataContext="{d:DesignInstance Type=viewmodel:VMManageProjects}"
      xmlns:viewmodel="clr-namespace:wisecorp.ViewModels"
      xmlns:behaviors="clr-namespace:wisecorp.Behaviors"
      xmlns:Components="clr-namespace:wisecorp.Views.Components" MouseUp="Page_MouseUp">

    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <materialDesign:Card Grid.Row="0"
                Margin="10,10,10,10"
                Padding="10"
                Grid.ColumnSpan="2">
            <TextBlock Text="{DynamicResource manageProjects}"
                       Style="{DynamicResource MaterialDesignBody1TextBlock}"/>
        </materialDesign:Card>

        <!-- Manage Projects Content -->
        <materialDesign:Card Grid.Row="1" Margin="10,10,10,10" Padding="10">
            <Grid>

                <TabControl Grid.Row="0" Grid.ColumnSpan="2" materialDesign:ColorZoneAssist.Mode="PrimaryDark" 
                    SelectedIndex="{Binding SelectedTabIndex, Mode=TwoWay}">

                    <TabItem Header="{DynamicResource treeDisplayMode}">
                        <TreeView  ItemsSource="{Binding ParentsProjects}"
                        SelectedItemChanged="TreeView_SelectedItemChanged"
                        AllowDrop="True"
                        Drop="TreeView_Drop"
                        x:Name="ProjectsTreeView"
                        >
                            <TreeView.Resources>
                                <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                                    <EventSetter Event="DragOver" Handler="TreeViewItem_DragOver"/>
                                    <EventSetter Event="DragLeave" Handler="TreeViewItem_DragLeave"/>
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                </Style>
                            </TreeView.Resources>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding ObservableEnabledSubProjects}">
                                    <Grid AllowDrop="True" Drop="Project_Drop" MouseMove="Project_MouseMove"
                                        HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch" 
                                        Background="Transparent">
                                        <TextBlock 
                                            Text="{Binding Name}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsActive}" Value="False">
                                                            <Setter Property="Opacity" Value="0.3"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Grid>
                                        
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>

                    </TabItem>
                    <TabItem
                        Header="{DynamicResource graphDisplayMode}">
                        <Components:ZoomableCanvas x:Name="zoomableCanvasControl"></Components:ZoomableCanvas>
                    </TabItem>
                </TabControl>
                    
                <DockPanel Grid.Row="0" Margin="10,10,0,10" HorizontalAlignment="Right" VerticalAlignment="Bottom" x:Name="DockPanelSelectedItem">
                    <StackPanel Orientation="Vertical" HorizontalAlignment="Right" VerticalAlignment="Bottom">

                        <ToggleButton Width="40" Height="40" Style="{StaticResource MaterialDesignActionLightToggleButton}" ToolTip="{DynamicResource showDisabledProjects}" IsChecked="{Binding ShowDisabledProjects}" Margin="10" materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=EyeOutline}">
                            <materialDesign:PackIcon Width="20" Height="20" Kind="EyeOffOutline" />
                        </ToggleButton>

                        <Button Style="{StaticResource MaterialDesignFloatingActionLightButton}" ToolTip="{DynamicResource addSubProject}" Command="{Binding AddSubProjectCommand}" Margin="10" Visibility="{Binding CanAddSubProject, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <materialDesign:PackIcon Width="20" Height="20" Kind="Plus" />
                        </Button>

                        <Button Style="{StaticResource MaterialDesignFloatingActionLightButton}" ToolTip="{DynamicResource duplicateSelectedProject}" Command="{Binding DuplicateSelectedProjectCommand}" CommandParameter="{Binding SelectedProject}" Margin="10" Visibility="{Binding ShowDuplicateSelectedProject, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <materialDesign:PackIcon Width="20" Height="20" Kind="ContentCopy" />
                        </Button>

                        <Button Style="{StaticResource MaterialDesignFloatingActionLightButton}" ToolTip="{DynamicResource deleteSelectedProject}" Command="{Binding DeleteSelectedProjectCommand}" CommandParameter="{Binding SelectedProject}" Margin="10" Visibility="{Binding ShowDeleteSelectedProject, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <materialDesign:PackIcon Width="20" Height="20" Kind="Delete" />
                        </Button>

                        <Button Style="{StaticResource MaterialDesignFloatingActionLightButton}" ToolTip="{DynamicResource restoreSelectedProject}" Command="{Binding RestoreSelectedProjectCommand}" CommandParameter="{Binding SelectedProject}" Margin="10" Visibility="{Binding ShowRestoreSelectedProject, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <materialDesign:PackIcon Width="20" Height="20" Kind="DeleteRestore" />
                        </Button>
                    </StackPanel>

                    <!-- selected project details. Is floating bottom right above the tree view, visible only when a project is selected -->
                    <materialDesign:Card VerticalAlignment="Bottom" Margin="10,10,10,10" Padding="10"  BorderThickness="2" BorderBrush="{DynamicResource MaterialDesign.Brush.Primary.Dark}" Background="{DynamicResource MaterialDesignPaper}" Visibility="{Binding IsProjectSelected, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Text="{DynamicResource nom}" TextAlignment="Right" Margin="0,10,10,10"></TextBlock>
                            <TextBox Grid.Row="0" Text="{Binding SelectedProject.Name}"  Grid.Column="1" Width="150" TextAlignment="Left" IsReadOnly="{Binding CannotEditSelectedProject}"/>

                            <TextBlock Grid.Row="1" Text="{DynamicResource description}" TextAlignment="Right" Margin="0,10,10,10"></TextBlock>
                            <TextBox Grid.Row="1" Text="{Binding SelectedProject.Description}" Grid.Column="1" Width="150" IsReadOnly="{Binding CannotEditSelectedProject}"/>

                            <TextBlock Grid.Row="2" Text="{DynamicResource datedebut}" TextAlignment="Right" Margin="0,10,10,10"/>
                            <DatePicker Grid.Row="2" Grid.Column="1" Width="150" 
                            SelectedDate="{Binding SelectedProject.EndDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintDatePicker}" Focusable="{Binding CanEditSelectedProject}">
                                <DatePicker.Resources>
                                    <Style TargetType="Button">
                                        <Setter Property="IsEnabled" Value="{Binding CanEditSelectedProject}"/>
                                    </Style>
                                </DatePicker.Resources>
                            </DatePicker>

                            <TextBlock Grid.Row="3" Text="{DynamicResource datefin}" TextAlignment="Right" Margin="0,10,10,10"/>
                            <DatePicker Grid.Row="3" Grid.Column="1" Width="150" 
                            SelectedDate="{Binding SelectedProject.StartDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Style="{StaticResource MaterialDesignFloatingHintDatePicker}" Focusable="{Binding CanEditSelectedProject}">
                                <DatePicker.Resources>
                                    <Style TargetType="Button">
                                        <Setter Property="IsEnabled" Value="{Binding CanEditSelectedProject}"/>
                                    </Style>
                                </DatePicker.Resources>
                            </DatePicker>

                            <TextBlock Grid.Row="4" Text="{DynamicResource budget }" TextAlignment="Right" Margin="0,10,10,10"></TextBlock>
                            <TextBox Grid.Row="4" Text="{Binding SelectedProject.Budget}" Grid.Column="1" Width="150" IsReadOnly="{Binding CannotEditSelectedProjectBudget}"/>

                            <TextBlock Grid.Row="5" Text="{DynamicResource nbHourP}" TextAlignment="Right" Margin="0,10,10,10"></TextBlock>
                            <TextBox Grid.Row="5" Text="{Binding SelectedProject.NbHour}" Grid.Column="1" Width="150" IsReadOnly="{Binding CannotEditSelectedProjectNbHour}"/>

                            <Button Grid.Row="6" Grid.Column="1" Content="{DynamicResource save}" Command="{Binding SaveSelectedProjectCommand}" CommandParameter="{Binding SelectedProject}" Style="{StaticResource MaterialDesignRaisedButton}" Margin="10" IsEnabled="{Binding CanEditSelectedProject}"/>
                            
                            <!-- add a small text if the user cannot edit the selected project -->
                            <TextBlock Grid.Row="7" Grid.Column="1" Text="{DynamicResource cannotEditSelectedProject}" Foreground="Red" Visibility="{Binding CannotEditSelectedProject, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </Grid>
                    </materialDesign:Card>

                    <Expander ExpandDirection="Left" IsExpanded="{Binding ShowAssignProjectsPanel}">
                        <Expander.Header>
                            <TextBlock RenderTransformOrigin=".5,.5" Text="{DynamicResource assignments}"  >
                                <TextBlock.LayoutTransform>
                                    <RotateTransform Angle="90" />
                                </TextBlock.LayoutTransform>
                            </TextBlock>
                        </Expander.Header>
                        <Components:AssignPanelControl DataContext="{Binding VMAssignProjects}" Height="585" MinWidth="490"/>
                    </Expander>
                </DockPanel>
            </Grid>
        </materialDesign:Card>

    </Grid>
</Page>